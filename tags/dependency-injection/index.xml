<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dependency injection on Fresh Swift</title>
    <link>https://freshswift.net/tags/dependency-injection/</link>
    <description>Recent content in dependency injection on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 07 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/dependency-injection/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dependency Injection via Property Wrappers</title>
      <link>https://www.kiloloco.com/articles/004-dependency-injection-via-property-wrappers/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      
      <description>Property Wrappers in Swift allow us to add a layer of separation between code that manages how a property is stored and the code that defines a property. It&#39;s a powerful feature with a lot of potential use cases. Dependency injection is a software engineering technique used to supply dependencies to an object or value type. In this post, Kilo Loco demonstrates how we can use Swift property wrappers to pass dependencies to a SwiftUI view. It&#39;s a cool idea.</description>
    </item>
    
    <item>
      <title>Dependency injection via protocol composition</title>
      <link>http://merowing.info/2017/04/using-protocol-compositon-for-dependency-injection</link>
      <pubDate>Mon, 17 Apr 2017 08:19:18 +0000</pubDate>
      
      <description>Krzysztof Zablocki with a nice approach to dependency injection based on protocol composition. Avoid constantly refactoring code callsites while keeping your code testable.</description>
    </item>
    
  </channel>
</rss>
