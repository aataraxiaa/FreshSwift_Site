<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>existential on Fresh Swift</title>
    <link>https://freshswift.net/tags/existential/</link>
    <description>Recent content in existential on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 28 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/existential/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unlock existentials for all protocols</title>
      <link>https://github.com/apple/swift-evolution/blob/main/proposals/0309-unlock-existential-types-for-all-protocols.md</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <description>Swift existential types provide value-level abstraction, allowing values of varying concrete types to be used interchangeably as values of the same existential type. In this accepted Swift evolution proposal, the authors outline their objective of alleviating some current limitations which impact the ability to use protocols as existential types.</description>
    </item>
    
    <item>
      <title>Unlock Existential Types for All Protocols</title>
      <link>https://forums.swift.org/t/unlock-existential-types-for-all-protocols/40665/3</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <description>Swift currently allows protocols that meet certain criteria to be used as types. Using a protocol in such a way essentially creates an existential type. However, protocols with associated type or self requirements cannot currently be used to create such existential types. This Swift evolution pitch proposes removing this restriction.</description>
    </item>
    
  </channel>
</rss>
