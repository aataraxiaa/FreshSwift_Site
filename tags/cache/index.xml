<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cache on Fresh Swift</title>
    <link>https://freshswift.net/tags/cache/</link>
    <description>Recent content in cache on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 15 May 2018 11:01:52 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/cache/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An elegant pattern to craft cache-efficient functions in Swift</title>
      <link>https://medium.com/@vin.pradeilles/an-elegant-pattern-to-craft-cache-efficient-functions-in-swift-c1a18f73e28c</link>
      <pubDate>Tue, 15 May 2018 11:01:52 +0000</pubDate>
      
      <description>In this post, Vincent Pradeilles describes how we can create Swift functions which cache their results, saving us valuable CPU cycles. Vincent looks at both non-recursive and recursive functions.</description>
    </item>
    
    <item>
      <title>The Flat Cache</title>
      <link>http://khanlou.com/2017/10/the-flat-cache/</link>
      <pubDate>Wed, 18 Oct 2017 07:44:32 +0000</pubDate>
      
      <description>Soroush Khanlou with an interesting post looking at the idea of a flat cache. As he says, the model layer of a client can be tough to implement correctly, but by using the described flat cache approach, we might be able to avoid some of the usual pain points.</description>
    </item>
    
  </channel>
</rss>
