<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sequence on Fresh Swift</title>
    <link>https://freshswift.net/tags/sequence/</link>
    <description>Recent content in sequence on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 14 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/sequence/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducing Swift Collections</title>
      <link>https://swift.org/blog/swift-collections/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <description>Like the Swift Algorithms package before it, the recently released Swift Collections package is intended to incubate new functionality for the Swift Standard Library. In this post, Karoy Lorentey from the Swift Standard Library team gives us a brief tour of what the package provides.</description>
    </item>
    
    <item>
      <title>Announcing Swift Algorithms</title>
      <link>https://swift.org/blog/swift-algorithms/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      
      <description>Swift Algorithms is a new open-source Swift package of sequence and collection algorithms. In this post, Nate Cook from the Swift standard library team at Apple gives a brief tour of this package and describes its relation to the Swift standard library.</description>
    </item>
    
    <item>
      <title>Standard library behavior change for LazyMapCollection prefix to act as a Sequence</title>
      <link>https://forums.swift.org/t/standard-library-behavior-change-for-lazymapcollection-prefix-to-act-as-a-sequence/39954</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      
      <description>The Swift standard library provides lazy variations of its Sequence and Collection types, on which operations such as map and filter are implemented lazily. This means that the actual computations will only occur when the results are needed. In this Swift evolution pitch, Greg Titus proposes an addition to the standard library that improves the behavior of the LazyMapCollection type.</description>
    </item>
    
    <item>
      <title>Swiftʼs Collection Types</title>
      <link>https://harshil.net/blog/swift-sequence-collection-array</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <description>The Swift standard library provides a whole suite of Sequence and Collection protocols, together with a large number of concrete types conforming to these protocols such as Array, Set, Dictionary, etc. In this detailed post, Harshil Shah covers all of the public types which make up Swift&#39;s Collection protocol hierarchy, examining Sequence, Collection, Array, and everything in between. An excellent post, and one to bookmark for future reference.</description>
    </item>
    
    <item>
      <title>Injecting forEach into chained method calls</title>
      <link>https://oleb.net/blog/2017/10/chained-foreach/</link>
      <pubDate>Fri, 10 Nov 2017 09:15:42 +0000</pubDate>
      
      <description>Ole Begemann creates his own version of Swift’s forEach method. The purpose is to create a version of the method which can be used in a sequence of chained method calls, and Ole extends the implementation to make his version compatible with lazy sequences.</description>
    </item>
    
  </channel>
</rss>
