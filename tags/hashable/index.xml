<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hashable on Fresh Swift</title>
    <link>https://freshswift.net/tags/hashable/</link>
    <description>Recent content in hashable on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 14 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/hashable/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reduce boilerplate code with an automatic synthesis of Equatable and Hashable conformance</title>
      <link>https://sarunw.com/posts/reduce-boilerplate-code-with-automatic-synthesis-of-equatable-and-hashable-conformance/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      
      <description>In this post, Sarun Wongpatcharapakorn takes us back to Swift 4.1 to look at the automatic synthesis of the Equatable and Hashable protocols. Even if you are already familiar with this feature, it&#39;s helpful to be reminded of how it can be used.</description>
    </item>
    
    <item>
      <title>Bloom Filters and Swift 4.2</title>
      <link>http://khanlou.com/2018/09/bloom-filters/</link>
      <pubDate>Fri, 05 Oct 2018 10:49:44 +0000</pubDate>
      
      <description>This is a really interesting post from Soroush Khanlou. Soroush explains how a data structure called a Bloom filter works, and describes how we can implement such a data structure using Swift 4.2 features.</description>
    </item>
    
    <item>
      <title>Synthesizing Equatable and Hashable conformance</title>
      <link>https://github.com/apple/swift-evolution/blob/master/proposals/0185-synthesize-equatable-hashable.md</link>
      <pubDate>Sun, 15 Oct 2017 14:32:01 +0000</pubDate>
      
      <description>Following in the footsteps of the well received Swift 4 Codable protocols, this Swift evolution proposal outlines the motivation for, and proposed implementation of, synthesized conformance to the Equatable and Hashable protocols. This is a really good proposal which would reduce the need for common boilerplate code. The idea is that if a types members all conform to Equatable or Hashable, then the entire type can simply opt-in to automatic synthesis by declaring itself as conforming.</description>
    </item>
    
  </channel>
</rss>
