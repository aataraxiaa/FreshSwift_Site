<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reactive on Fresh Swift</title>
    <link>https://freshswift.net/tags/reactive/</link>
    <description>Recent content in reactive on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 01 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/reactive/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SwiftUI &#43; Combine = ‚ù§Ô∏è</title>
      <link>https://peterfriese.dev/swift-combine-love/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <description>Apple announced both SwiftUI and Combine at WWDC 2019, introducing two frameworks that will completely change how apps for their platforms are built. In this post, Peter Friese demonstrates why using these two frameworks together will help us to build better apps, resulting in cleaner, more modular code.</description>
    </item>
    
    <item>
      <title>Swift Tip: Bindings with KVO and Key Paths</title>
      <link>https://www.objc.io/blog/2018/04/24/bindings-with-kvo-and-keypaths/</link>
      <pubDate>Thu, 26 Apr 2018 12:33:18 +0000</pubDate>
      
      <description>Taken from their soon to be published book, the objc.io team show us how to create lightweight UI bindings using Key-Value-Observing and Swift‚Äôs key paths. Very nice.</description>
    </item>
    
    <item>
      <title>Receiver: Swift ¬µframework implementing the Observer pattern üì°</title>
      <link>https://github.com/RuiAAPeres/Receiver</link>
      <pubDate>Thu, 16 Nov 2017 17:41:08 +0000</pubDate>
      
      <description>This is a nice micro framework from Rui Peres which allows us to use the Reactive Observer pattern without the need to pull in larger, more complete Reactive libraries.</description>
    </item>
    
  </channel>
</rss>
