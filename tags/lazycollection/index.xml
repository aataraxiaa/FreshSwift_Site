<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lazycollection on Fresh Swift</title>
    <link>https://freshswift.net/tags/lazycollection/</link>
    <description>Recent content in lazycollection on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 24 May 2017 07:47:54 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/lazycollection/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Swift Tricks: Searching for Objects by Type</title>
      <link>https://timekl.com/blog/2017/05/14/swift-tricks-searching-for-objects-by-type/</link>
      <pubDate>Wed, 24 May 2017 07:47:54 +0000</pubDate>
      
      <description>Performing operations such as map or flatmap on large collections can be expensive. Luckily, Swift provides lazy collections. Using a lazy collection, all operations are delayed until we actually need to access an element. In this post, TIm Ekl uses a lazy collection together with flatmap to efficiently find a specific type in an array of types.</description>
    </item>
    
  </channel>
</rss>
