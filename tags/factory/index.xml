<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>factory on Fresh Swift</title>
    <link>https://freshswift.net/tags/factory/</link>
    <description>Recent content in factory on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 06 Jun 2018 00:45:47 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/factory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static factory methods in Swift</title>
      <link>https://www.swiftbysundell.com/posts/static-factory-methods-in-swift</link>
      <pubDate>Wed, 06 Jun 2018 00:45:47 +0000</pubDate>
      
      <description>In this entry in his weekly series, John Sundell looks at an approach to writing setup code which avoids subclassing. John demonstrates how using static factory methods can be a great way to separate setup code from actual logic, while also enabling nice syntax features.</description>
    </item>
    
  </channel>
</rss>
