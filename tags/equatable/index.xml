<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>equatable on Fresh Swift</title>
    <link>https://freshswift.net/tags/equatable/</link>
    <description>Recent content in equatable on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 09 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/equatable/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why Swift closures are not Equatable</title>
      <link>https://www.jessesquires.com/blog/2021/04/05/why-swift-closures-are-not-equatable</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      
      <description>Closures in Swift are reference types, and as such, we might assume that they are Equatable. However, that is not the case, and in this post, Jesse Squires digs into some old forum posts to help explain why.</description>
    </item>
    
    <item>
      <title>Reduce boilerplate code with an automatic synthesis of Equatable and Hashable conformance</title>
      <link>https://sarunw.com/posts/reduce-boilerplate-code-with-automatic-synthesis-of-equatable-and-hashable-conformance/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      
      <description>In this post, Sarun Wongpatcharapakorn takes us back to Swift 4.1 to look at the automatic synthesis of the Equatable and Hashable protocols. Even if you are already familiar with this feature, it&#39;s helpful to be reminded of how it can be used.</description>
    </item>
    
    <item>
      <title>Synthesized Conformance to Equatable</title>
      <link>https://swiftunboxed.com/internals/synthesized-equatable-conformance/</link>
      <pubDate>Thu, 09 Aug 2018 11:39:26 +0000</pubDate>
      
      <description>Greg Heo looks behind the curtain to show us how the Swift compiler automatically synthesizes conformance to the Equatable protocol. Greg starts by describing how the compiler decides is conformance is possible, before looking at how it generates the code.</description>
    </item>
    
    <item>
      <title>Synthesizing Equatable and Hashable conformance</title>
      <link>https://github.com/apple/swift-evolution/blob/master/proposals/0185-synthesize-equatable-hashable.md</link>
      <pubDate>Sun, 15 Oct 2017 14:32:01 +0000</pubDate>
      
      <description>Following in the footsteps of the well received Swift 4 Codable protocols, this Swift evolution proposal outlines the motivation for, and proposed implementation of, synthesized conformance to the Equatable and Hashable protocols. This is a really good proposal which would reduce the need for common boilerplate code. The idea is that if a types members all conform to Equatable or Hashable, then the entire type can simply opt-in to automatic synthesis by declaring itself as conforming.</description>
    </item>
    
  </channel>
</rss>
