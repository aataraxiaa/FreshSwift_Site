<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>swift 5.5 on Fresh Swift</title>
    <link>https://freshswift.net/tags/swift-5.5/</link>
    <description>Recent content in swift 5.5 on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 07 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/swift-5.5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding async/await in Swift</title>
      <link>https://www.andyibanez.com/posts/understanding-async-await-in-swift/</link>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      
      <description>Swift 5.5&#39;s new async/await feature plays a major role in the language&#39;s new concurrency model. In this post, which is part of a series, Andy Ibanez first offers a refresher on some existing concepts before introducing us to async/await.</description>
    </item>
    
    <item>
      <title>What&#39;s new in Swift 5.5?</title>
      <link>https://www.hackingwithswift.com/articles/233/whats-new-in-swift-5-5</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      
      <description>Swift 5.5, available in any Xcode 13 beta, includes a huge number of changes to the language. At WWDC this year, a lot of these changes were covered by session videos. However, despite being published before WWDC, this in-depth article from Paul Hudson is still worth a read. Paul walks through most of the language changes introduced in Swift 5.5, with code samples for each. Lot&#39;s to cover here.</description>
    </item>
    
    <item>
      <title>Async/Await and the Future of Combine</title>
      <link>https://benscheirman.com/2021/06/async-await-and-the-future-of-combine/</link>
      <pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate>
      
      <description>With the debut of the new Swift Concurrency model at WWWDC this year, it was noticeable how some of its language features appear to be replacements for some of the Combine frameworks features. In this honest post on the topic, Ben Scheirman, who authored an entire course on Combine, gives his take on its future.</description>
    </item>
    
  </channel>
</rss>
