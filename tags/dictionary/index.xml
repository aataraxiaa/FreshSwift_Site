<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dictionary on Fresh Swift</title>
    <link>https://freshswift.net/tags/dictionary/</link>
    <description>Recent content in dictionary on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 03 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/dictionary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Grouping Array Elements With Dictionary in Swift</title>
      <link>https://swiftsenpai.com/swift/group-array-elements-with-dictionary/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <description>Swift 5 introduced a new initializer for Dictionary, which allows us to create a dictionary of grouped elements from an input array. Here, Lee Kah Seng demonstrates how we can use this initializer to group array elements based on a custom property of the array element type.</description>
    </item>
    
    <item>
      <title>Key difference between Dictionary and NSDictionary</title>
      <link>http://lapcatsoftware.com/articles/key-difference.html</link>
      <pubDate>Tue, 12 Dec 2017 09:34:39 +0000</pubDate>
      
      <description>Jeff Johnson points out an interesting difference between Swift Dictionary and NSDictionary. The difference relates to how Swift implements String equality as Unicode canonical equivalence, and as Jeff points out, this could cause problems if you save and load dictionaries from user defaults.</description>
    </item>
    
    <item>
      <title>Dictionary and Set Improvements in Swift 4.0</title>
      <link>https://swift.org/blog/dictionary-and-set-improvements/</link>
      <pubDate>Tue, 10 Oct 2017 07:56:31 +0000</pubDate>
      
      <description>Swift 4 added a lot of really awesome Dictionary and Set APIs. Operations like grouping, filtering, and transforming values are easier than ever, and can be performed in a single step. In this post on the official Swift blog, Nate Cook explores these new APIs. Itâ€™s also worth noting that most of the changes mentioned are available in Swift 3.2, so even if you have not yet moved to Swift 4, there is something here for you.</description>
    </item>
    
    <item>
      <title>The startling uniquing of Swift 4 dictionaries</title>
      <link>http://ericasadun.com/2017/06/19/the-startling-uniquing-of-swift-4-dictionaries/</link>
      <pubDate>Tue, 27 Jun 2017 13:53:22 +0000</pubDate>
      
      <description>Another great post from Erica Sadun. Here Erica shows us how we can use the new uniquing feature which has been added to the Dictionary type in Swift 4. This feature allows us to create a Dictionary of unique keys, while applying a function to each key&#39;s value each time a duplicate key is added. In one example, Erica uses this to find out which word appears the most in a large String.</description>
    </item>
    
  </channel>
</rss>
