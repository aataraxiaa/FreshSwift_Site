<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>architecture on Fresh Swift</title>
    <link>https://freshswift.net/tags/architecture/</link>
    <description>Recent content in architecture on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 01 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SwiftUI: Double-Edged Sword</title>
      <link>https://mohsen.dev/2020/06/21/swiftui-double-edged-sword.html</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <description>I really like this short post from Mohsen Alijanpour. One of the many benefits of migrating to SwiftUI from the world of UIKit, which assumes we will build using the MVC pattern, is that SwiftUI is architecure-less. That is, SwiftUI doesn&#39;t assume what architectural pattern we will use when building. Here, Mohsen highlights this freedom, while also reminding us that such freedom comes at the cost of more responsibility.</description>
    </item>
    
    <item>
      <title>So Swift, So Clean Architecture for iOS</title>
      <link>http://basememara.com/swift-clean-architecture/</link>
      <pubDate>Tue, 01 May 2018 17:30:31 +0000</pubDate>
      
      <description>This is an interesting article from Basem Emara in which he presents his version of a clean app architecture. Basem bases his architecture on an idea by the well known software engineer Robert Martin.</description>
    </item>
    
    <item>
      <title>Blurring the Lines Between MVVM and VIPER</title>
      <link>https://theswiftpost.co/blurring-the-lines-between-mvvm-and-viper/</link>
      <pubDate>Mon, 30 Apr 2018 14:52:47 +0000</pubDate>
      
      <description>GÃ¶ksel KÃ¶ksal explains why he thinks MVVM and VIPER are not so different. GÃ¶ksel starts by explaining the components of each software architecture, before showing us why using one doesnâ€™t necessarily mean abandoning the other. Swift code examples are of course included ðŸ˜ƒ.</description>
    </item>
    
  </channel>
</rss>
