<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mixin on Fresh Swift</title>
    <link>https://freshswift.net/tags/mixin/</link>
    <description>Recent content in mixin on Fresh Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 01 Apr 2018 13:11:05 +0000</lastBuildDate><atom:link href="https://freshswift.net/tags/mixin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dependency Mixins in Swift using Protocol-Oriented-Programming</title>
      <link>https://chickenwing.software/scratches/programming/swift-programming/swift-dependency-mixin?utm_source=newsletter_mailer&amp;utm_medium=email&amp;utm_campaign=weekly</link>
      <pubDate>Sun, 01 Apr 2018 13:11:05 +0000</pubDate>
      
      <description>Eddie Sullivan describes an approach to handling dependencies between types. Eddie looks at the idea of using protocol-based mixins to reduce coupling. Although this is not exactly the approach I would take, itâ€™s always worth learning about how others approach a common problem.</description>
    </item>
    
    <item>
      <title>Swift Protocols as UI Mixins</title>
      <link>http://cleancocoa.com/posts/2017/04/protocol-ui-mixin/</link>
      <pubDate>Tue, 02 May 2017 16:51:47 +0000</pubDate>
      
      <description>Christian Tietze comments on a GitHub gist which adds pull to refresh to a UITableView. The gist is a nice example of using a Swift protocol with a default implementation to add functionality to a UI element.</description>
    </item>
    
  </channel>
</rss>
